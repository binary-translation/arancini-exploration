#ifndef DEFREG
#error DEFREG must be defined when include x86 reg.def
#endif

// Program Counter
DEFREG(uint64_t, i64, PC)

// GPRs
DEFREG(uint64_t, i64, RAX)
DEFREG(uint64_t, i64, RCX)
DEFREG(uint64_t, i64, RDX)
DEFREG(uint64_t, i64, RBX)
DEFREG(uint64_t, i64, RSP)
DEFREG(uint64_t, i64, RBP)
DEFREG(uint64_t, i64, RSI)
DEFREG(uint64_t, i64, RDI)
DEFREG(uint64_t, i64, R8)
DEFREG(uint64_t, i64, R9)
DEFREG(uint64_t, i64, R10)
DEFREG(uint64_t, i64, R11)
DEFREG(uint64_t, i64, R12)
DEFREG(uint64_t, i64, R13)
DEFREG(uint64_t, i64, R14)
DEFREG(uint64_t, i64, R15)

// Flags
DEFREG(uint8_t, i8, ZF)
DEFREG(uint8_t, i8, CF)
DEFREG(uint8_t, i8, OF)
DEFREG(uint8_t, i8, SF)
DEFREG(uint8_t, i8, PF)
DEFREG(uint8_t, i8, DF)
DEFREG(uint8_t, i8, unused2)
DEFREG(uint8_t, i8, unused3)

// Seg
DEFREG(uint64_t, i64, FS)
DEFREG(uint64_t, i64, GS)

// x87 FPU
DEFREG(uint64_t, i64, X87_STACK_BASE)
DEFREG(uint16_t, i16, X87_CTRL)
DEFREG(uint16_t, i16, X87_STS)
DEFREG(uint16_t, i16, X87_TAG)
DEFREG(uint16_t, i16, unused4)

// ZMMs
DEFREG(uint512_t, i512, ZMM0)
DEFREG(uint512_t, i512, ZMM1)
DEFREG(uint512_t, i512, ZMM2)
DEFREG(uint512_t, i512, ZMM3)
DEFREG(uint512_t, i512, ZMM4)
DEFREG(uint512_t, i512, ZMM5)
DEFREG(uint512_t, i512, ZMM6)
DEFREG(uint512_t, i512, ZMM7)
DEFREG(uint512_t, i512, ZMM8)
DEFREG(uint512_t, i512, ZMM9)
DEFREG(uint512_t, i512, ZMM10)
DEFREG(uint512_t, i512, ZMM11)
DEFREG(uint512_t, i512, ZMM12)
DEFREG(uint512_t, i512, ZMM13)
DEFREG(uint512_t, i512, ZMM14)
DEFREG(uint512_t, i512, ZMM15)
DEFREG(uint512_t, i512, ZMM16)
DEFREG(uint512_t, i512, ZMM17)
DEFREG(uint512_t, i512, ZMM18)
DEFREG(uint512_t, i512, ZMM19)
DEFREG(uint512_t, i512, ZMM20)
DEFREG(uint512_t, i512, ZMM21)
DEFREG(uint512_t, i512, ZMM22)
DEFREG(uint512_t, i512, ZMM23)
DEFREG(uint512_t, i512, ZMM24)
DEFREG(uint512_t, i512, ZMM25)
DEFREG(uint512_t, i512, ZMM26)
DEFREG(uint512_t, i512, ZMM27)
DEFREG(uint512_t, i512, ZMM28)
DEFREG(uint512_t, i512, ZMM29)
DEFREG(uint512_t, i512, ZMM30)
DEFREG(uint512_t, i512, ZMM31)

// Control registers
DEFREG(uint64_t, i64, XCR0)
