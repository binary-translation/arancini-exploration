#ifndef DEFREG
#error DEFREG must be defined when include x86 reg.def
#endif

// Program Counter
DEFREG(uint64_t, i64, PC)

// GPRs
DEFREG(uint64_t, i64, RAX)
DEFREG(uint64_t, i64, RCX)
DEFREG(uint64_t, i64, RDX)
DEFREG(uint64_t, i64, RBX)
DEFREG(uint64_t, i64, RSP)
DEFREG(uint64_t, i64, RBP)
DEFREG(uint64_t, i64, RSI)
DEFREG(uint64_t, i64, RDI)
DEFREG(uint64_t, i64, R8)
DEFREG(uint64_t, i64, R9)
DEFREG(uint64_t, i64, R10)
DEFREG(uint64_t, i64, R11)
DEFREG(uint64_t, i64, R12)
DEFREG(uint64_t, i64, R13)
DEFREG(uint64_t, i64, R14)
DEFREG(uint64_t, i64, R15)

// XMMs
DEFREG(uint128_t, i128, XMM0)
DEFREG(uint128_t, i128, XMM1)
DEFREG(uint128_t, i128, XMM2)
DEFREG(uint128_t, i128, XMM3)
DEFREG(uint128_t, i128, XMM4)
DEFREG(uint128_t, i128, XMM5)
DEFREG(uint128_t, i128, XMM6)
DEFREG(uint128_t, i128, XMM7)
DEFREG(uint128_t, i128, XMM8)
DEFREG(uint128_t, i128, XMM9)
DEFREG(uint128_t, i128, XMM10)
DEFREG(uint128_t, i128, XMM11)
DEFREG(uint128_t, i128, XMM12)
DEFREG(uint128_t, i128, XMM13)
DEFREG(uint128_t, i128, XMM14)
DEFREG(uint128_t, i128, XMM15)

// // YMMs
// DEFREG(uint256_t, i256, YMM0)
// DEFREG(uint256_t, i256, YMM1)
// DEFREG(uint256_t, i256, YMM2)
// DEFREG(uint256_t, i256, YMM3)
// DEFREG(uint256_t, i256, YMM4)
// DEFREG(uint256_t, i256, YMM5)
// DEFREG(uint256_t, i256, YMM6)
// DEFREG(uint256_t, i256, YMM7)
// DEFREG(uint256_t, i256, YMM8)
// DEFREG(uint256_t, i256, YMM9)
// DEFREG(uint256_t, i256, YMM10)
// DEFREG(uint256_t, i256, YMM11)
// DEFREG(uint256_t, i256, YMM12)
// DEFREG(uint256_t, i256, YMM13)
// DEFREG(uint256_t, i256, YMM14)
// DEFREG(uint256_t, i256, YMM15)

// // ZMMs
// DEFREG(uint512_t, i512, ZMM0)
// DEFREG(uint512_t, i512, ZMM1)
// DEFREG(uint512_t, i512, ZMM2)
// DEFREG(uint512_t, i512, ZMM3)
// DEFREG(uint512_t, i512, ZMM4)
// DEFREG(uint512_t, i512, ZMM5)
// DEFREG(uint512_t, i512, ZMM6)
// DEFREG(uint512_t, i512, ZMM7)
// DEFREG(uint512_t, i512, ZMM8)
// DEFREG(uint512_t, i512, ZMM9)
// DEFREG(uint512_t, i512, ZMM10)
// DEFREG(uint512_t, i512, ZMM11)
// DEFREG(uint512_t, i512, ZMM12)
// DEFREG(uint512_t, i512, ZMM13)
// DEFREG(uint512_t, i512, ZMM14)
// DEFREG(uint512_t, i512, ZMM15)
// DEFREG(uint512_t, i512, ZMM16)
// DEFREG(uint512_t, i512, ZMM17)
// DEFREG(uint512_t, i512, ZMM18)
// DEFREG(uint512_t, i512, ZMM19)
// DEFREG(uint512_t, i512, ZMM20)
// DEFREG(uint512_t, i512, ZMM21)
// DEFREG(uint512_t, i512, ZMM22)
// DEFREG(uint512_t, i512, ZMM23)
// DEFREG(uint512_t, i512, ZMM24)
// DEFREG(uint512_t, i512, ZMM25)
// DEFREG(uint512_t, i512, ZMM26)
// DEFREG(uint512_t, i512, ZMM27)
// DEFREG(uint512_t, i512, ZMM28)
// DEFREG(uint512_t, i512, ZMM29)
// DEFREG(uint512_t, i512, ZMM30)
// DEFREG(uint512_t, i512, ZMM31)

// Flags
DEFREG(uint8_t, i8, ZF)
DEFREG(uint8_t, i8, CF)
DEFREG(uint8_t, i8, OF)
DEFREG(uint8_t, i8, SF)
DEFREG(uint8_t, i8, PF)
DEFREG(uint8_t, i8, DF)

// Seg
DEFREG(uint64_t, i64, FS)
DEFREG(uint64_t, i64, GS)

// x87 FPU
DEFREG(uint16_t, i16, X87_CTRL)
DEFREG(uint16_t, i16, X87_STS)
DEFREG(uint16_t, i16, X87_TAG)
DEFREG(uint64_t, i64, X87_STACK_BASE)

// Control registers
DEFREG(uint64_t, i64, XCR0)